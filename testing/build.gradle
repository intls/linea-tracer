import org.web3j.solidity.gradle.plugin.EVMVersion
import org.web3j.gradle.plugin.GenerateContractWrappers

plugins {
  id "common-plugins"
  id "org.web3j" version "4.12.2"
  id "linea.yul-plugin"
}

apply from: rootProject.file("gradle/corset.gradle")
apply from: rootProject.file("gradle/java.gradle")
apply from: rootProject.file("gradle/tests.gradle")
apply from: rootProject.file("gradle/dependency-management.gradle")
apply from: rootProject.file('gradle/common-dependencies.gradle')
apply from: rootProject.file("gradle/lint.gradle")

dependencies {
  implementation project(path: ':arithmetization')

  implementation "${besuArtifactGroup}:besu-datatypes"
  implementation "${besuArtifactGroup}:evm"
  implementation "${besuArtifactGroup}:plugin-api"
  implementation "${besuArtifactGroup}.internal:clique"
  implementation "${besuArtifactGroup}.internal:common"
  implementation "${besuArtifactGroup}.internal:config"
  implementation "${besuArtifactGroup}.internal:core"
  implementation "${besuArtifactGroup}.internal:metrics-core"
  implementation "${besuArtifactGroup}.internal:referencetests"
  implementation "${besuArtifactGroup}.internal:rlp"
  implementation "${besuArtifactGroup}.internal:services"
  implementation "${besuArtifactGroup}.internal:testutil"
  implementation "${besuArtifactGroup}.internal:algorithms"

  implementation 'com.google.code.gson:gson'
  implementation 'com.google.guava:guava'

  implementation 'org.assertj:assertj-core'
  implementation 'org.junit.jupiter:junit-jupiter-api'
}

node {
  download = false
}

tasks.withType(GenerateContractWrappers.class).configureEach {
  mustRunAfter(processResources)
}

web3j {
  generatedPackageName = "net.consensys.linea.testing.generated"
}

solidity {
  optimize = false
  prettyJson = true
  evmVersion = EVMVersion.LONDON
}

yul {
  solcVersion = "0.8.26"
  compilerJsonTemplatePath = "src/main/resources/templates/compiler_yul.json.template"
}
